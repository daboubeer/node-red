[
    {
        "id": "a490cb4b563e3faf",
        "type": "tab",
        "label": "ispindle-mqtt-ubidots-littlebock",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2c0b5b63beddc525",
        "type": "tab",
        "label": "inject-msg-topics",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1d3f0d648ef4874b",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "e7a90bd264380835",
        "type": "mqtt-broker",
        "name": "${MQTT_BROKER_NAME}",
        "broker": "${MQTT_BROKER_IP}",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "959631424cf2ea5c",
        "type": "influxdb",
        "hostname": "193.168.1.90",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "influxdb",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086/",
        "rejectUnauthorized": false
    },
    {
        "id": "2be7c8fd.d795c8",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "catchpoint",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x"
    },
    {
        "id": "9882cb140721248b",
        "type": "ubidots_out",
        "z": "a490cb4b563e3faf",
        "name": "",
        "token": "${UBIDOTS_TOKEN}",
        "label_device": "",
        "device_label": "MacDabou_x",
        "tier": "educational",
        "tls_checkbox": true,
        "x": 1130,
        "y": 140,
        "wires": []
    },
    {
        "id": "bf0fb6917ad986ab",
        "type": "mqtt in",
        "z": "a490cb4b563e3faf",
        "name": "Ispindel001",
        "topic": "ispindel/Ispindel001/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "e7a90bd264380835",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 240,
        "wires": [
            [
                "6984e53193650fad",
                "189e3da5981418b1"
            ]
        ]
    },
    {
        "id": "189e3da5981418b1",
        "type": "function",
        "z": "a490cb4b563e3faf",
        "name": "enrich_payload",
        "func": "var deviceLabel = env.get('DEVICE_NAME')\nvar label, new_payload\nvar topic_prefix = \"ispindel/\" + deviceLabel\n\n//node.log(\"Topic prefix:\" + topic_prefix)\n//node.log(\"Message topic:\" + msg.topic)\n\nswitch (msg.topic) {\n    case topic_prefix + \"/tilt\":\n      label = \"tilt\";\n      new_payload = {[label]: parseFloat(msg.payload)};\n    break;\n    \n    case topic_prefix + \"/battery\":\n      label = \"battery\";\n      new_payload = {[label]: parseFloat(msg.payload)};\n    break;\n    \n    case topic_prefix + \"/temperature\":\n      label = \"temperature\";\n      new_payload = {[label]: parseFloat(msg.payload)};\n    break;\n    \n    case topic_prefix + \"/gravity\":\n      label = \"gravity\";\n      new_payload = {[label]: parseFloat(msg.payload)};\n    break;\n    \n    case topic_prefix + \"/RSSI\":\n      label = \"RSSI\";\n      new_payload = {[label]: parseFloat(msg.payload)};\n    break;\n\n    case topic_prefix + \"/interval\":\n      label = \"interval\";\n      new_payload = {[label]: parseFloat(msg.payload)};\n    break; \n    \n    case topic_prefix + \"/temp_units\":\n      label = \"temp_units\";\n      new_payload = {[label]: {value: 1, context: {units: \"Â°C\"}}}\n    break;     \n}\n\n\nmsg.topic = label      \nmsg.payload = new_payload\nmsg.payload.ubidotsDeviceLabel = deviceLabel\n\n// node.log(\"Device name: \" + env.get('DEVICE_NAME'))\n// node.log(\"Payload: \" + JSON.stringify(new_payload))\n// node.log(\"Topic : \" + msg.topic)\n      \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 120,
        "wires": [
            [
                "05c0f15d683d6d25"
            ]
        ]
    },
    {
        "id": "05c0f15d683d6d25",
        "type": "join",
        "z": "a490cb4b563e3faf",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 470,
        "y": 120,
        "wires": [
            [
                "5cb2a16a39de19ee"
            ]
        ]
    },
    {
        "id": "5cb2a16a39de19ee",
        "type": "function",
        "z": "a490cb4b563e3faf",
        "name": "gravity-to-sg",
        "func": "var density = 1+(msg.payload.gravity/(258.6-((msg.payload.gravity/258.2)*227.1)))\n\n// node.log(\"#### Density: \" + density + \", Temperature: \" + msg.payload.temperature)\n\nmsg.payload.density = density\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 120,
        "wires": [
            [
                "ba1f73c4fd4aba47",
                "e9480f1d1afd357e"
            ]
        ]
    },
    {
        "id": "e697d9f197785ce2",
        "type": "join",
        "z": "a490cb4b563e3faf",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 670,
        "y": 280,
        "wires": [
            [
                "f229f87756ad24aa",
                "474b499ea0ef06b1"
            ]
        ]
    },
    {
        "id": "3055ca55823e5aa8",
        "type": "function",
        "z": "a490cb4b563e3faf",
        "name": "To littlebock",
        "func": "var deviceLabel = env.get('DEVICE_NAME')\nvar deviceID = env.get('DEVICE_ID')\nvar topic_prefix = \"ispindel/\" + deviceLabel\n\nswitch (msg.topic) {\n    \n    case topic_prefix + \"/tilt\":\n      msg.topic = \"ispindel\";\n      msg.payload = {\"name\":deviceLabel,\"ID\":deviceID,\"angle\":msg.payload};\n    break;\n\n    case topic_prefix + \"/temperature\":\n      msg.topic = \"ispindel\";\n      msg.payload = {\"temperature\":msg.payload,};\n    break;\n\n    case topic_prefix + \"/battery\":\n      msg.topic = \"ispindel\";\n      msg.payload = {\"battery\":msg.payload,};   \n    break;\n\n    case topic_prefix + \"/gravity\":\n      msg.topic = \"ispindel\";\n      msg.payload = {\"gravity\":msg.payload,};\n    break;\n\n    case topic_prefix + \"/temp_units\":\n      msg.topic = \"ispindel\";\n      msg.payload = {\"temp_units\":msg.payload,};\n    break;\n \n    case topic_prefix + \"/interval\":\n      msg.topic = \"ispindel\";\n      msg.payload = {\"interval\":msg.payload,};\n    break;    \n\n    case topic_prefix + \"/RSSI\":\n      msg.topic = \"ispindel\";\n      msg.payload = {\"RSSI\":msg.payload,};\n    break;   \n   \n}\n\n//node.log(\"Littlebock API: www.littlebock.fr/api/log/ispindle/\" + env.get('LITTLEBOCK_API'))\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 280,
        "wires": [
            [
                "e697d9f197785ce2"
            ]
        ]
    },
    {
        "id": "f229f87756ad24aa",
        "type": "change",
        "z": "a490cb4b563e3faf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"Content-Type\":\"application/json\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 280,
        "wires": [
            [
                "74177caa5b4a8413"
            ]
        ]
    },
    {
        "id": "d2f22804ad0fc1fe",
        "type": "http request",
        "z": "a490cb4b563e3faf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "query",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1330,
        "y": 280,
        "wires": [
            [
                "1a78299f1a5b763a"
            ]
        ]
    },
    {
        "id": "0aedd0ec3fe72c30",
        "type": "file",
        "z": "a490cb4b563e3faf",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1100,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ba1f73c4fd4aba47",
        "type": "function",
        "z": "a490cb4b563e3faf",
        "name": "Set-fileName",
        "func": "function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [day, month, year].join('-');\n}\nvar tempString =formatDate(Date().toString());\n\nvar tempString1 = \"ispindle_\";\nvar tempString2 = tempString1.concat(tempString);\nvar finalPath = tempString2.concat(\".txt\");\n\nmsg.filename=finalPath;\n// node.log(\"Path: \" + msg.filename)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 80,
        "wires": [
            [
                "0aedd0ec3fe72c30"
            ]
        ]
    },
    {
        "id": "40ce62a45f470f05",
        "type": "join",
        "z": "a490cb4b563e3faf",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "10",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 670,
        "y": 340,
        "wires": [
            [
                "ba374e28ffa1cb91",
                "ceb6a292e7b8a564"
            ]
        ]
    },
    {
        "id": "b1b6b53b18a37d43",
        "type": "function",
        "z": "a490cb4b563e3faf",
        "name": "To brewspy",
        "func": "var brewSpyToken = get.env('BREW_SPY_TOKEN')\nvar deviceLabel = env.get('DEVICE_NAME')\nvar deviceID = env.get('DEVICE_ID')\n\nvar topic_prefix = \"ispindel/\" + deviceLabel\n\nswitch (msg.topic) {\n    \n    case topic_prefix + \"/tilt\":\n      msg.topic = \"ispindel\";\n      msg.payload = {\"name\":deviceLabel,\"token\":brewSpyToken,\"angle\":msg.payload,};\n    break;\n\n    case topic_prefix + \"temperature\":\n      msg.topic = \"ispindel\";\n      msg.payload = {\"temperature\":msg.payload,};\n    break;\n\n    case topic_prefix + \"battery\":\n      msg.topic = \"ispindel\";\n      msg.payload = {\"battery\":msg.payload,};   \n    break;\n\n    case topic_prefix + \"gravity\":\n      msg.topic = \"ispindel\";\n      msg.payload = {\"gravity\":msg.payload,};\n    break;\n\n    case topic_prefix + \"temp_units\":\n      msg.topic = \"ispindel\";\n      msg.payload = {\"temp_units\":msg.payload,};\n    break;\n \n    case topic_prefix + \"interval\":\n      msg.topic = \"ispindel\";\n      msg.payload = {\"interval\":msg.payload,};\n    break;    \n\n   case topic_prefix + \"RSSI\":\n      msg.topic = \"ispindel\";\n      msg.payload = {\"RSSI\":msg.payload,};\n    break;   \n   \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 340,
        "wires": [
            [
                "40ce62a45f470f05"
            ]
        ]
    },
    {
        "id": "ba374e28ffa1cb91",
        "type": "change",
        "z": "a490cb4b563e3faf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"Content-Type\":\"application/json\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 340,
        "wires": [
            [
                "0d5f2dad919fc1dc"
            ]
        ]
    },
    {
        "id": "0d5f2dad919fc1dc",
        "type": "http request",
        "z": "a490cb4b563e3faf",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "query",
        "url": "www.brew-spy.com:80/api/ispindel/",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "ceb6a292e7b8a564",
        "type": "debug",
        "z": "a490cb4b563e3faf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 400,
        "wires": []
    },
    {
        "id": "6984e53193650fad",
        "type": "switch",
        "z": "a490cb4b563e3faf",
        "name": "Route",
        "property": "RECIPIENTS",
        "propertyType": "env",
        "rules": [
            {
                "t": "cont",
                "v": "littlebock",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "brewspy",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "influxdb",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 250,
        "y": 300,
        "wires": [
            [
                "3055ca55823e5aa8"
            ],
            [
                "b1b6b53b18a37d43"
            ],
            [
                "1b53dad10bece38d"
            ]
        ]
    },
    {
        "id": "e9480f1d1afd357e",
        "type": "switch",
        "z": "a490cb4b563e3faf",
        "name": "check_if_we_send_to",
        "property": "RECIPIENTS",
        "propertyType": "env",
        "rules": [
            {
                "t": "cont",
                "v": "ubidots",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 900,
        "y": 140,
        "wires": [
            [
                "9882cb140721248b"
            ]
        ]
    },
    {
        "id": "474b499ea0ef06b1",
        "type": "debug",
        "z": "a490cb4b563e3faf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 220,
        "wires": []
    },
    {
        "id": "a1fed0a59c57ebd4",
        "type": "debug",
        "z": "a490cb4b563e3faf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 80,
        "wires": []
    },
    {
        "id": "1a78299f1a5b763a",
        "type": "debug",
        "z": "a490cb4b563e3faf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 280,
        "wires": []
    },
    {
        "id": "74177caa5b4a8413",
        "type": "function",
        "z": "a490cb4b563e3faf",
        "name": "Set-Littlebock-url",
        "func": "var littlebock_api=env.get('LITTLEBOCK_API')\nvar littlebock_server=\"www.littlebock.fr/api/log/ispindle/\"\n\nmsg.url=littlebock_server + littlebock_api;\n// node.log(\"Littlebock API: \" + msg.url)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 280,
        "wires": [
            [
                "d2f22804ad0fc1fe"
            ]
        ]
    },
    {
        "id": "82cc31bb9dccdaaf",
        "type": "influxdb out",
        "z": "a490cb4b563e3faf",
        "influxdb": "959631424cf2ea5c",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "s",
        "retentionPolicyV18Flux": "",
        "org": "daboubeer",
        "bucket": "Ispindel001",
        "x": 1120,
        "y": 480,
        "wires": []
    },
    {
        "id": "1b53dad10bece38d",
        "type": "function",
        "z": "a490cb4b563e3faf",
        "name": "To influxdb",
        "func": "var deviceLabel = env.get('DEVICE_NAME')\nvar deviceID = env.get('DEVICE_ID')\nvar density\nvar topic_prefix = \"ispindel/\" + deviceLabel\n\nswitch (msg.topic) {\n    case topic_prefix + \"/tilt\":\n      label = \"tilt\";\n      new_payload = {\n          [label]: parseInt(msg.payload),\n          [\"name\"]: deviceLabel,\n          [\"ID\"]: deviceID\n      }       \n    break;\n\n    case topic_prefix + \"/temperature\":\n     label = \"temperature\";\n      new_payload = {\n          [label]: parseFloat(msg.payload)\n      }\n    break;\n\n    case topic_prefix + \"/battery\":\n     label = \"battery\";\n     new_payload = {\n          [label]: parseFloat(msg.payload)\n      }\n    break;\n\n    case topic_prefix + \"/gravity\":\n     label = \"gravity\";\n     density = 1+(msg.payload/(258.6-((msg.payload/258.2)*227.1)))\n     new_payload = {\n          [label]: parseFloat(msg.payload),\n          [\"density\"]: parseFloat(density)\n      }\n    break;\n\n    case topic_prefix + \"/temp_units\":\n      label = \"temp_units\";\n      new_payload = {\n          [label]: msg.payload\n      }\n    break;\n \n    case topic_prefix + \"/interval\":\n      label = \"interval\";\n      new_payload = {\n          [label]: msg.payload\n      }\n    break;    \n\n    case topic_prefix + \"/RSSI\":\n      label = \"RSSI\";\n      new_payload = {\n          [label]: msg.payload\n      }\n    break;\n}\n\nmsg.measurement = deviceLabel\nmsg.url = env.get('INFLUXDB_URL')\n\nmsg.topic = label\nmsg.payload = new_payload\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 480,
        "wires": [
            [
                "983f67c16c240678"
            ]
        ]
    },
    {
        "id": "724b314c8a9f71d5",
        "type": "debug",
        "z": "a490cb4b563e3faf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 580,
        "wires": []
    },
    {
        "id": "983f67c16c240678",
        "type": "join",
        "z": "a490cb4b563e3faf",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 650,
        "y": 480,
        "wires": [
            [
                "d5fb75d49cba30a3"
            ]
        ]
    },
    {
        "id": "d5fb75d49cba30a3",
        "type": "function",
        "z": "a490cb4b563e3faf",
        "name": "Log-density-gravity-temp",
        "func": "\nnode.log(\"#### Density: \" + msg.payload.density + \", gravity: \" + msg.payload.gravity + \", temperature: \" + msg.payload.temperature)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 480,
        "wires": [
            [
                "82cc31bb9dccdaaf",
                "724b314c8a9f71d5"
            ]
        ]
    },
    {
        "id": "7a7b80bc5b5f285e",
        "type": "mqtt out",
        "z": "2c0b5b63beddc525",
        "name": "",
        "topic": "ispindel/Ispindel001/tilt",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "application/json",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7a90bd264380835",
        "x": 330,
        "y": 60,
        "wires": []
    },
    {
        "id": "fc0dd0b20e4a818d",
        "type": "inject",
        "z": "2c0b5b63beddc525",
        "name": "tilt",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "tilt",
        "payload": "23.24",
        "payloadType": "num",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "7a7b80bc5b5f285e"
            ]
        ]
    },
    {
        "id": "426749d4375f8350",
        "type": "mqtt out",
        "z": "2c0b5b63beddc525",
        "name": "",
        "topic": "ispindel/Ispindel001/gravity",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "application/json",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7a90bd264380835",
        "x": 340,
        "y": 140,
        "wires": []
    },
    {
        "id": "be7d6e9f5343db71",
        "type": "inject",
        "z": "2c0b5b63beddc525",
        "name": "gravity",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "gravity",
        "payload": "0.59",
        "payloadType": "num",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "426749d4375f8350"
            ]
        ]
    }
]